    .section .text.__rfill
    .globl __rfill
.equ TLBRSAVE, 0x8b
# PGD是当前上下文中出错虚地址对应的全局目录基址
.equ PGD, 0x1b
.equ TLBRELO0, 0x8c
.equ TLBRELO1, 0x8d
.equ TLBREHI, 0x8e
.equ CRMD, 0x0
# 触发TLB重填例外的出错虚地址
.equ TLBRBADV, 0x89
.equ TLBIDX, 0x10
.equ TLBEHI, 0x11
.equ TLBELO0, 0x12
.equ TLBELO1, 0x13
# __rfill在遍历过程中会检查页表项的有效性, 如果无效则会调用错误处理
__rfill:
    # 使用TLB重填例外数据保存, 保存t0
    csrwr $t0, TLBRSAVE
    # 用于调试
    csrrd $t0, TLBRBADV
    csrrd $t0, PGD
    # rj(t0)的第[14: 13]位应该等于0, rj(t0)在该指令下语义为第3(level, 指令中的立即数)级页表基址
    # 取回下一级页表的基址, 写入rd(t0)
    lddir $t0, $t0, 2
    # 检查是否有效
    andi $t0, $t0, 1
    # 
    beqz $t0, 1f

    # 处理TLB填充
    # todo: 设置的是dir3, dir1, pt
    csrrd $t0, PGD
    lddir $t0, $t0, 2
    # Todo: 不理解: 是要去掉有效位吗?
    addi.d $t0, $t0, -1
    lddir $t0, $t0, 1
    andi $t0, $t0, 1
    beqz $t0, 1f
    csrrd $t0, PGD
    lddir $t0, $t0, 2
    # 不理解, 同上
    addi.d $t0, $t0, -1
    lddir $t0, $t0, 1
    # 不理解, 同上
    addi.d $t0, $t0, -1

    # 访问偶数页
    ldpte $t0, 0
    # 访问奇数页
    ldpte $t0, 1
    # 这里只是读取了TLBRELO0, TLBRELO1, CRMD, 用于调试 
    csrrd $t0, TLBRELO0
    csrrd $t0, TLBRELO1
    csrrd $t0, CRMD
2:  
    tlbfill
    # Todo: 不理解, 清空TLBRBADV的低13位
    csrrd $t0, TLBRBADV
    srli.d $t0, $t0, 13
    slli.d $t0, $t0, 13
    csrwr $t0, TLBRBADV
    tlbsrch 
    tlbrd
    # 只是读取TLBELO0, TLBELO1, 用于调试
    csrrd $t0, TLBELO0
    csrrd $t0, TLBELO1

    # 恢复t0
    csrrd $t0, TLBRSAVE
    # 例外返回
    ertn
1: 
    # 错误处理
    # 设置TLBREHI重填例外专用的页大小, 在tlb重填例外时, tlbwr, tlbfill指令写入TLB表现的PS域的值来自于此
    csrrd $t0, TLBREHI
    ori $t0, $t0, 0xc
    csrwr $t0, TLBREHI 

    # 设置页表项的NR, NX位
    rotri.d $t0, $t0, 61
    ori $t0, $t0, 0x3
    rotri.d $t0, $t0, 3

    csrwr $t0, TLBRELO0
    csrrd $t0, TLBRELO0
    csrwr $t0, TLBRELO1
    b 2b